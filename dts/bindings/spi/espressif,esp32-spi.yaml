description: ESP32 SPI

compatible: "espressif,esp32-spi"

include: [spi-controller.yaml, pinctrl-device.yaml]

properties:
    reg:
      required: true

    interrupts:
      required: false

    pinctrl-0:
      required: true

    pinctrl-names:
      required: true

    half-duplex:
      type: boolean
      required: false
      description: |
        Enable half-duplex communication mode.

        Transmit data before receiving it, instead of simultaneously

    dummy-comp:
      type: boolean
      required: false
      description: Enable dummy SPI compensation cycles

    sio:
      type: boolean
      required: false
      description: |
        Enable 3-wire mode

        Use MOSI for both sending and receiving data

    dma-enabled:
      type: boolean
      required: false
      description: Enable SPI DMA support

    dma-clk:
      type: int
      required: false
      description: DMA clock source

    dma-host:
      type: int
      required: false
      description: DMA Host - 0 -> SPI2, 1 -> SPI3

    clk-as-cs:
      type: boolean
      required: false
      description: |
        Support to toggle the CS while the clock toggles

        Output clock on CS line if CS is active

    positive-cs:
      type: boolean
      required: false
      description: Make CS positive during a transaction instead of negative

    use-iomux:
      type: boolean
      required: false
      description: |
        Some pins are allowed to bypass the GPIO Matrix and use the IO_MUX
        routing mechanism instead, this avoids extra routing latency and makes
        possible the use of operating frequencies higher than 20 MHz.

        Refer to SoC's Technical Reference Manual to check which pins are
        allowed to use this routing path.
